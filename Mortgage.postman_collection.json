---
openapi: 3.0.0
info:
  title: FSCM
  contact: {}
  version: '1.0'
  x-codegen-settings:
    Nullify404: false
    GenerateAsyncCode: true
    UseMethodPrefix: false
    UseModelPostfix: false
    UseControllerPrefix: true
    UseEnumPostfix: true
    CollectParameters: false
    UseConstructorsForConfig: false
    UseCommonSDKLibrary: false
    iOSUseAppInfoPlist: false
    AndroidUseAppManifest: false
    BodySerialization: 0
    EnableAdditionalModelProperties: false
    PreserveParameterOrder: true
    AppendContentHeaders: true
    iOSGenerateCoreData: false
    GenerateInterfaces: false
    NodeHttpClient: NODE_REQUEST
    ValidateRequiredParameters: false
    JavaUsePropertiesConfig: false
    Timeout: 0
    StoreTimezoneInformation: false
    EnablePHPComposerVersionString: false
    EnableLogging: false
    ArraySerialization: Indexed
    ModelSerializationScheme: Json
    UseExceptionPrefix: true
    RunscopeEnabled: false
    AndroidHttpClient: ANDROID_OK
    ObjCHttpClient: UNIREST
    CSharpHttpClient: UNIREST
    PHPHttpClient: UNIREST
    JavaHttpClient: JAVA_OK
    ParameterArrayFormat: ParamArrayWithIndex
    SecurityProtocols:
    - Ssl3
    - Tls
    GenerateTravisConfig: false
    GenerateCircleConfig: false
    GenerateAppveyorConfig: false
    GenerateJenkinsConfig: false
    EnableHttpCache: false
    Retries: 0
    RetryInterval: 1
    GenerateAdvancedDocs: true
    UnderscoreNumbers: true
    UseSingletonPattern: true
    DisableLinting: false
    ApplyCustomizations: []
    SortResources: false
    AllowSkippingSSLCertVerification: false
    DoNotSplitWords: []
    EnableGlobalUserAgent: true
    ReturnCompleteHttpResponse: false
    GenerateModels: true
    GenerateExceptions: true
    IgnoreIfNullJson: false
    DisableDocs: false
    LiftParameterDescriptionFromCustomType: false
    ThrowForHttpErrorStatusCodes: true
    ResponseMapping:
      Type: Simple
    ForceKeywordArgsInRuby: false
    SymbolizeHashKeysInRuby: false
    UsageExampleEndpoint:
      Description: ''
      EndpointGroupName: ''
      EndpointName: ''
    IsLatestVersion: false
    EnableImmutableModels: false
    GenerateEnums: true
    BackoffFactor: 2
    StatusCodesToRetry:
    - 408
    - 413
    - 429
    - 500
    - 502
    - 503
    - 504
    - 521
    - 522
    - 524
    RequestMethodsToRetry:
    - GET
    - PUT
    UserConfigurableRetries: true
    UseEndpointMethodName: false
    EncodeTemplateParameters: true
    GenerateExamplesForOptionalFields: false
    MultitargetDotnetVersions: false
    BackoffMax: 0
    RetryOnTimeout: true
    EnableCookies: false
    EnableJsonPassThroughForAny: false
    PascalCaseEnumForCSharp: false
    PascalCaseEnumForTypeScript: false
    DisableMultipleAuth: false
    AddSingleAuthDeprecatedCode: true
    EnableExperimentalTypeCombinatorGeneration: false
    ErrorTemplates: {}
    UseSecuritySchemeNameForSingleAuth: false
    EnableModelKeywordArgsInRuby: false
    NullifyEmptyResponses: false
    ExtendedAdditionalPropertiesSupport: false
  x-server-configuration:
    default-environment: production
    default-server: Server 1
    environments:
    - name: production
      servers:
      - name: Server 1
        url: https://dev-proc-api-fscm.bankina.id/v1
      - name: Server 2
        url: https://localhost:8080/v1
      - name: Server 3
        url: https://apigw-dev.bankina.id/exp-fscm/1.0
      - name: Server 4
        url: http://example.com/account
      - name: Server 5
        url: https://dev-exp-api-fscm.bankina.id/v1
      - name: Server 6
        url: https://apigw-stg.bankina.id/exp-fscm/1.0
      - name: Server 7
        url: http://localhost:8080/v1
      - name: Server 8
        url: https://dev-proc-api-channeling.bankina.id/v1/user
    parameters: []
  x-image-uri: ''
servers:
- url: https://dev-proc-api-fscm.bankina.id/v1
  variables: {}
- url: https://localhost:8080/v1
  variables: {}
- url: https://apigw-dev.bankina.id/exp-fscm/1.0
  variables: {}
- url: http://example.com/account
  variables: {}
- url: https://dev-exp-api-fscm.bankina.id/v1
  variables: {}
- url: https://apigw-stg.bankina.id/exp-fscm/1.0
  variables: {}
- url: http://localhost:8080/v1
  variables: {}
- url: https://dev-proc-api-channeling.bankina.id/v1/user
  variables: {}
paths:
  "/igate/customer/account-balance":
    post:
      tags:
      - iGate
      summary: GetAccountBalance
      operationId: GetAccountBalance
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/GetAccountBalanceRequest"
              - example:
                  dateTime: '20231129140213'
                  referenceNumber: '202311082604'
                  accountNumber: '1000241969'
                  transactionType: FINANCIAL
            example:
              dateTime: '20231129140213'
              referenceNumber: '202311082604'
              accountNumber: '1000241969'
              transactionType: FINANCIAL
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/igate/customer/account-balance"
          headers:
            Content-Type: application/json
          body: "{\r\n  \"dateTime\": \"20231129140213\",\r\n  \"referenceNumber\":
            \"202311082604\",\r\n  \"accountNumber\": \"1000241969\",\r\n  \"transactionType\":
            \"FINANCIAL\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: GetAccountBalance
      x-server-name: Server 1
  "/igate/customer/individual":
    post:
      tags:
      - iGate
      summary: Get Individu
      operationId: GetIndividu
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/GetIndividuRequest"
              - example:
                  dateTime: '20231129140213'
                  referenceNumber: '202311082604'
                  accountNumber: '1000241969'
                  transactionType: FINANCIAL
            example:
              dateTime: '20231129140213'
              referenceNumber: '202311082604'
              accountNumber: '1000241969'
              transactionType: FINANCIAL
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/igate/customer/individual"
          headers:
            Content-Type: application/json
          body: "{\r\n  \"dateTime\": \"20231129140213\",\r\n  \"referenceNumber\":
            \"202311082604\",\r\n  \"accountNumber\": \"1000241969\",\r\n  \"transactionType\":
            \"FINANCIAL\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get Individu
      x-server-name: Server 1
  "/cifs/9979641507":
    get:
      tags:
      - Account
      summary: Get CIf
      operationId: GetCIf
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 07 Dec 2023 07:43:52 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '1052'
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '549'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: istio-envoy
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      encodedKey: 8ae381898c16418d018c39baa034074e
                      id: '9979641507'
                      state: ACTIVE
                      firstName: XXX1010036875YYY
                      lastName: XXX1010036875YYY
                      mobilePhone: ''
                      emailAddress: ''
                      preferredLanguage: ENGLISH
                      birthDate: '2017-10-02'
                      gender: ''
                      notes: Create CIF Account for FSCM
                      assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
                      clientRoleKey: 8a8e8e987c560e38017c5d844082016c
                      loanCycle: 5
                      groupLoanCycle: 0
                      groupKeys: []
                      creationDate: '2023-12-05T18:26:21+07:00'
                      approvedDate: '2023-12-05T18:26:21+07:00'
                      lastModifiedDate: '2023-12-06T08:54:20+07:00'
                      activationDate: '2023-12-06T08:48:51+07:00'
                      addresses:
                      - city: Town-country10100368
                        country: ''
                        indexInList: 0
                        latitude: 0
                        line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
                        longitude: 0
                        postcode: ''
                        region: ''
                        encodedKey: 8ae381898c16418d018c39baa034074f
                        parentKey: 8ae381898c16418d018c39baa034074e
                        line2: ''
                      idDocuments: []
                      _cfsPersonalData:
                        cfKtpNo: ''
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  encodedKey: 8ae381898c16418d018c39baa034074e
                  id: '9979641507'
                  state: ACTIVE
                  firstName: XXX1010036875YYY
                  lastName: XXX1010036875YYY
                  mobilePhone: ''
                  emailAddress: ''
                  preferredLanguage: ENGLISH
                  birthDate: '2017-10-02'
                  gender: ''
                  notes: Create CIF Account for FSCM
                  assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
                  clientRoleKey: 8a8e8e987c560e38017c5d844082016c
                  loanCycle: 5
                  groupLoanCycle: 0
                  groupKeys: []
                  creationDate: '2023-12-05T18:26:21+07:00'
                  approvedDate: '2023-12-05T18:26:21+07:00'
                  lastModifiedDate: '2023-12-06T08:54:20+07:00'
                  activationDate: '2023-12-06T08:48:51+07:00'
                  addresses:
                  - city: Town-country10100368
                    country: ''
                    indexInList: 0
                    latitude: 0
                    line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
                    longitude: 0
                    postcode: ''
                    region: ''
                    encodedKey: 8ae381898c16418d018c39baa034074f
                    parentKey: 8ae381898c16418d018c39baa034074e
                    line2: ''
                  idDocuments: []
                  _cfsPersonalData:
                    cfKtpNo: ''
                meta: {}
        '500':
          description: Internal Server Error
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 07 Dec 2023 07:44:05 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '217'
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '591'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: istio-envoy
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Failed1"
                - example:
                    response_code: '500'
                    response_message: Sistem mengalami gangguan, Mohon hubungi administrator
                    data: 
                    meta:
                      debug_param: '[{"errorCode":301,"errorReason":"INVALID_CLIENT_ID","errorSource":""}]'
              example:
                response_code: '500'
                response_message: Sistem mengalami gangguan, Mohon hubungi administrator
                data: 
                meta:
                  debug_param: '[{"errorCode":301,"errorReason":"INVALID_CLIENT_ID","errorSource":""}]'
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/cifs/9979641507"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            content-type: application/json; charset=utf-8
            date: Thu, 07 Dec 2023 07:43:52 GMT
            content-length: '1052'
            x-envoy-upstream-service-time: '549'
            server: istio-envoy
            Content-Type: application/json
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"encodedKey\": \"8ae381898c16418d018c39baa034074e\",\r\n
            \   \"id\": \"9979641507\",\r\n    \"state\": \"ACTIVE\",\r\n    \"firstName\":
            \"XXX1010036875YYY\",\r\n    \"lastName\": \"XXX1010036875YYY\",\r\n    \"mobilePhone\":
            \"\",\r\n    \"emailAddress\": \"\",\r\n    \"preferredLanguage\": \"ENGLISH\",\r\n
            \   \"birthDate\": \"2017-10-02\",\r\n    \"gender\": \"\",\r\n    \"notes\":
            \"Create CIF Account for FSCM\",\r\n    \"assignedBranchKey\": \"8a8e86237ca910b6017cc0243c3a62ff\",\r\n
            \   \"clientRoleKey\": \"8a8e8e987c560e38017c5d844082016c\",\r\n    \"loanCycle\":
            5,\r\n    \"groupLoanCycle\": 0,\r\n    \"groupKeys\": [],\r\n    \"creationDate\":
            \"2023-12-05T18:26:21+07:00\",\r\n    \"approvedDate\": \"2023-12-05T18:26:21+07:00\",\r\n
            \   \"lastModifiedDate\": \"2023-12-06T08:54:20+07:00\",\r\n    \"activationDate\":
            \"2023-12-06T08:48:51+07:00\",\r\n    \"addresses\": [\r\n      {\r\n
            \       \"city\": \"Town-country10100368\",\r\n        \"country\": \"\",\r\n
            \       \"indexInList\": 0,\r\n        \"latitude\": 0,\r\n        \"line1\":
            \"GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950\",\r\n
            \       \"longitude\": 0,\r\n        \"postcode\": \"\",\r\n        \"region\":
            \"\",\r\n        \"encodedKey\": \"8ae381898c16418d018c39baa034074f\",\r\n
            \       \"parentKey\": \"8ae381898c16418d018c39baa034074e\",\r\n        \"line2\":
            \"\"\r\n      }\r\n    ],\r\n    \"idDocuments\": [],\r\n    \"_cfsPersonalData\":
            {\r\n      \"cfKtpNo\": \"\"\r\n    }\r\n  },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get CIf
      x-server-name: Server 1
  "/account":
    get:
      tags:
      - Account
      summary: Inquiry Account Number
      operationId: InquiryAccountNumber
      parameters:
      - name: accountNumber
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1001701092
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 07 Dec 2023 07:42:16 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '305'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success1"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      id: ebbe594b-bc71-47cd-81fe-054dde59fc7e
                      partnerId: ''
                      accountNumber: '1000887788'
                      cif: '9979641507'
                      cifEncodeKey: 8ae381898c16418d018c39baa034074e
                      customerType: Corporate
                      createdAt: '2023-12-05T18:25:21.23227+07:00'
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  id: ebbe594b-bc71-47cd-81fe-054dde59fc7e
                  partnerId: ''
                  accountNumber: '1000887788'
                  cif: '9979641507'
                  cifEncodeKey: 8ae381898c16418d018c39baa034074e
                  customerType: Corporate
                  createdAt: '2023-12-05T18:25:21.23227+07:00'
                meta: {}
        '404':
          description: Not Found
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 07 Dec 2023 07:43:23 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '115'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Failed4041"
                - example:
                    response_code: '404'
                    response_message: Record not found
                    data: 
                    meta:
                      debug_param: record not found
              example:
                response_code: '404'
                response_message: Record not found
                data: 
                meta:
                  debug_param: record not found
      deprecated: false
      servers:
      - url: https://localhost:8080/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/account?accountNumber=1001701092"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Thu, 07 Dec 2023 07:42:16 GMT
            Content-Length: '305'
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"id\": \"ebbe594b-bc71-47cd-81fe-054dde59fc7e\",\r\n
            \   \"partnerId\": \"\",\r\n    \"accountNumber\": \"1000887788\",\r\n
            \   \"cif\": \"9979641507\",\r\n    \"cifEncodeKey\": \"8ae381898c16418d018c39baa034074e\",\r\n
            \   \"customerType\": \"Corporate\",\r\n    \"createdAt\": \"2023-12-05T18:25:21.23227+07:00\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Inquiry Account Number
      x-server-name: Server 2
  "/cifs/":
    get:
      tags:
      - Account
      summary: Get CIF1
      operationId: GetCIF1
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 05 Dec 2023 12:01:52 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '1049'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      encodedKey: 8ae381898c16418d018c39baa034074e
                      id: '9979641507'
                      state: INACTIVE
                      firstName: XXX1010036875YYY
                      lastName: XXX1010036875YYY
                      mobilePhone: ''
                      emailAddress: ''
                      preferredLanguage: ENGLISH
                      birthDate: '2017-10-02'
                      gender: ''
                      notes: Create CIF Account for FSCM
                      assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
                      clientRoleKey: 8a8e8e987c560e38017c5d844082016c
                      loanCycle: 0
                      groupLoanCycle: 0
                      groupKeys: []
                      creationDate: '2023-12-05T18:26:21+07:00'
                      approvedDate: '2023-12-05T18:26:21+07:00'
                      lastModifiedDate: '2023-12-05T18:26:21+07:00'
                      activationDate: '0001-01-01T00:00:00Z'
                      addresses:
                      - city: Town-country10100368
                        country: ''
                        indexInList: 0
                        latitude: 0
                        line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
                        longitude: 0
                        postcode: ''
                        region: ''
                        encodedKey: 8ae381898c16418d018c39baa034074f
                        parentKey: 8ae381898c16418d018c39baa034074e
                        line2: ''
                      idDocuments: []
                      _cfsPersonalData:
                        cfKtpNo: ''
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  encodedKey: 8ae381898c16418d018c39baa034074e
                  id: '9979641507'
                  state: INACTIVE
                  firstName: XXX1010036875YYY
                  lastName: XXX1010036875YYY
                  mobilePhone: ''
                  emailAddress: ''
                  preferredLanguage: ENGLISH
                  birthDate: '2017-10-02'
                  gender: ''
                  notes: Create CIF Account for FSCM
                  assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
                  clientRoleKey: 8a8e8e987c560e38017c5d844082016c
                  loanCycle: 0
                  groupLoanCycle: 0
                  groupKeys: []
                  creationDate: '2023-12-05T18:26:21+07:00'
                  approvedDate: '2023-12-05T18:26:21+07:00'
                  lastModifiedDate: '2023-12-05T18:26:21+07:00'
                  activationDate: '0001-01-01T00:00:00Z'
                  addresses:
                  - city: Town-country10100368
                    country: ''
                    indexInList: 0
                    latitude: 0
                    line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
                    longitude: 0
                    postcode: ''
                    region: ''
                    encodedKey: 8ae381898c16418d018c39baa034074f
                    parentKey: 8ae381898c16418d018c39baa034074e
                    line2: ''
                  idDocuments: []
                  _cfsPersonalData:
                    cfKtpNo: ''
                meta: {}
      deprecated: false
      servers:
      - url: https://apigw-dev.bankina.id/exp-fscm/1.0
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/cifs/"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Tue, 05 Dec 2023 12:01:52 GMT
            Content-Length: '1049'
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"encodedKey\": \"8ae381898c16418d018c39baa034074e\",\r\n
            \   \"id\": \"9979641507\",\r\n    \"state\": \"INACTIVE\",\r\n    \"firstName\":
            \"XXX1010036875YYY\",\r\n    \"lastName\": \"XXX1010036875YYY\",\r\n    \"mobilePhone\":
            \"\",\r\n    \"emailAddress\": \"\",\r\n    \"preferredLanguage\": \"ENGLISH\",\r\n
            \   \"birthDate\": \"2017-10-02\",\r\n    \"gender\": \"\",\r\n    \"notes\":
            \"Create CIF Account for FSCM\",\r\n    \"assignedBranchKey\": \"8a8e86237ca910b6017cc0243c3a62ff\",\r\n
            \   \"clientRoleKey\": \"8a8e8e987c560e38017c5d844082016c\",\r\n    \"loanCycle\":
            0,\r\n    \"groupLoanCycle\": 0,\r\n    \"groupKeys\": [],\r\n    \"creationDate\":
            \"2023-12-05T18:26:21+07:00\",\r\n    \"approvedDate\": \"2023-12-05T18:26:21+07:00\",\r\n
            \   \"lastModifiedDate\": \"2023-12-05T18:26:21+07:00\",\r\n    \"activationDate\":
            \"0001-01-01T00:00:00Z\",\r\n    \"addresses\": [\r\n      {\r\n        \"city\":
            \"Town-country10100368\",\r\n        \"country\": \"\",\r\n        \"indexInList\":
            0,\r\n        \"latitude\": 0,\r\n        \"line1\": \"GD PLAZA MUTIARA
            LT 21 SUITE 2105   Town-country1010036875  12950\",\r\n        \"longitude\":
            0,\r\n        \"postcode\": \"\",\r\n        \"region\": \"\",\r\n        \"encodedKey\":
            \"8ae381898c16418d018c39baa034074f\",\r\n        \"parentKey\": \"8ae381898c16418d018c39baa034074e\",\r\n
            \       \"line2\": \"\"\r\n      }\r\n    ],\r\n    \"idDocuments\": [],\r\n
            \   \"_cfsPersonalData\": {\r\n      \"cfKtpNo\": \"\"\r\n    }\r\n  },\r\n
            \ \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get CIF
      x-server-name: Server 3
  "/account/1001701092":
    post:
      tags:
      - Account
      summary: Binding Account Number
      operationId: BindingAccountNumber
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/BindingAccountNumberRequest"
              - example:
                  customerNo: '123'
            example:
              customerNo: '123'
        required: true
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 15 Feb 2024 01:43:13 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '365'
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '4037'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: istio-envoy
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success8"
                - example:
                    response_code: '200'
                    response_message: Sukses
                    data:
                      accountNumber: '1001701181'
                      accountName: CIF CORP SATU
                      accountType: GIRO
                      productCode: '1011'
                      productName: GIRO
                      currency: IDR
                      workingBalance: 0
                      referenceNumber: '202463348247'
                      dateTime: '20240215084310'
                      customerNumber: '7529403288'
                      customerType: Corporate
                      limitId: XNC159
                    meta: {}
              example:
                response_code: '200'
                response_message: Sukses
                data:
                  accountNumber: '1001701181'
                  accountName: CIF CORP SATU
                  accountType: GIRO
                  productCode: '1011'
                  productName: GIRO
                  currency: IDR
                  workingBalance: 0
                  referenceNumber: '202463348247'
                  dateTime: '20240215084310'
                  customerNumber: '7529403288'
                  customerType: Corporate
                  limitId: XNC159
                meta: {}
        '500':
          description: Internal Server Error
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 18 Dec 2023 06:23:49 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            activityid:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 5a65e9f5-519f-4de0-967f-db3196b6fdaf
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '2675'
            Access-Control-Allow-Origin:
              content:
                text/plain:
                  schema:
                    type: string
                  example: "*"
            Access-Control-Allow-Methods:
              content:
                text/plain:
                  schema:
                    type: string
                  example: GET
            Access-Control-Allow-Headers:
              content:
                text/plain:
                  schema:
                    type: string
                  example: authorization,Access-Control-Allow-Origin,Content-Type,SOAPAction,apikey,Internal-Key,Authorization
            CF-Cache-Status:
              content:
                text/plain:
                  schema:
                    type: string
                  example: DYNAMIC
            Report-To:
              content:
                text/plain:
                  schema:
                    type: string
                  example:
                    endpoints:
                    - url: https://a.nel.cloudflare.com/report/v3?s=H4t7LsEYVhXrPcyx2CXvP4xB4p%2F26vgYiiJu3X%2Fah4QN8P1bhQ3fiBM1E%2BVxXhAKTVHAQqW1RDQux46sZn4EnfAbm9Cq%2FlLPUPssbA1jbFJ8k0NFfdtMhgwtmV4g%2BBEJMs0pIxnbjQ%3D%3D
                    group: cf-nel
                    max_age: 604800
            NEL:
              content:
                text/plain:
                  schema:
                    type: string
                  example:
                    success_fraction: 0
                    report_to: cf-nel
                    max_age: 604800
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: cloudflare
            CF-RAY:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 837551acfe6e68e4-CGK
            alt-svc:
              content:
                text/plain:
                  schema:
                    type: string
                  example: h3=":443"; ma=86400
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Errornotfund1"
                - example:
                    responseCode: '50051000'
                    responseMessage: Sistem mengalami gangguan, Mohon hubungi administrator
                    data: 
                    meta:
                      debug_param: Data Tidak Ditemukan
              example:
                responseCode: '50051000'
                responseMessage: Sistem mengalami gangguan, Mohon hubungi administrator
                data: 
                meta:
                  debug_param: Data Tidak Ditemukan
      deprecated: false
      servers:
      - url: https://apigw-dev.bankina.id/exp-fscm/1.0
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/account/1001701092"
          headers:
            X-PARTNER-ID: sgo-tester
            Content-Type: application/json
          body: "{\r\n  \"customerNo\": \"123\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            content-type: application/json; charset=utf-8
            date: Thu, 15 Feb 2024 01:43:13 GMT
            content-length: '365'
            x-envoy-upstream-service-time: '4037'
            server: istio-envoy
            Content-Type: application/json
          body: "{\r\n  \"response_code\": \"200\",\r\n  \"response_message\": \"Sukses\",\r\n
            \ \"data\": {\r\n    \"accountNumber\": \"1001701181\",\r\n    \"accountName\":
            \"CIF CORP SATU\",\r\n    \"accountType\": \"GIRO\",\r\n    \"productCode\":
            \"1011\",\r\n    \"productName\": \"GIRO\",\r\n    \"currency\": \"IDR\",\r\n
            \   \"workingBalance\": 0,\r\n    \"referenceNumber\": \"202463348247\",\r\n
            \   \"dateTime\": \"20240215084310\",\r\n    \"customerNumber\": \"7529403288\",\r\n
            \   \"customerType\": \"Corporate\",\r\n    \"limitId\": \"XNC159\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Binding Account Number
      x-server-name: Server 3
  "/1001701173":
    get:
      tags:
      - Account
      summary: Inquiry Account Number
      operationId: GetInquiryAccountNumber
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      responses:
        '200':
          description: OK
          headers:
            content-type:
              content:
                text/plain:
                  schema:
                    type: string
                  example: application/json; charset=utf-8
            date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 15 Feb 2024 01:43:13 GMT
            content-length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '365'
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '4037'
            server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: istio-envoy
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success8"
                - example:
                    response_code: '200'
                    response_message: Sukses
                    data:
                      accountNumber: '1001701181'
                      accountName: CIF CORP SATU
                      accountType: GIRO
                      productCode: '1011'
                      productName: GIRO
                      currency: IDR
                      workingBalance: 0
                      referenceNumber: '202463348247'
                      dateTime: '20240215084310'
                      customerNumber: '7529403288'
                      customerType: Corporate
                      limitId: XNC159
                    meta: {}
              example:
                response_code: '200'
                response_message: Sukses
                data:
                  accountNumber: '1001701181'
                  accountName: CIF CORP SATU
                  accountType: GIRO
                  productCode: '1011'
                  productName: GIRO
                  currency: IDR
                  workingBalance: 0
                  referenceNumber: '202463348247'
                  dateTime: '20240215084310'
                  customerNumber: '7529403288'
                  customerType: Corporate
                  limitId: XNC159
                meta: {}
        '500':
          description: Internal Server Error
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 18 Dec 2023 06:23:49 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            activityid:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 5a65e9f5-519f-4de0-967f-db3196b6fdaf
            x-envoy-upstream-service-time:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '2675'
            Access-Control-Allow-Origin:
              content:
                text/plain:
                  schema:
                    type: string
                  example: "*"
            Access-Control-Allow-Methods:
              content:
                text/plain:
                  schema:
                    type: string
                  example: GET
            Access-Control-Allow-Headers:
              content:
                text/plain:
                  schema:
                    type: string
                  example: authorization,Access-Control-Allow-Origin,Content-Type,SOAPAction,apikey,Internal-Key,Authorization
            CF-Cache-Status:
              content:
                text/plain:
                  schema:
                    type: string
                  example: DYNAMIC
            Report-To:
              content:
                text/plain:
                  schema:
                    type: string
                  example:
                    endpoints:
                    - url: https://a.nel.cloudflare.com/report/v3?s=H4t7LsEYVhXrPcyx2CXvP4xB4p%2F26vgYiiJu3X%2Fah4QN8P1bhQ3fiBM1E%2BVxXhAKTVHAQqW1RDQux46sZn4EnfAbm9Cq%2FlLPUPssbA1jbFJ8k0NFfdtMhgwtmV4g%2BBEJMs0pIxnbjQ%3D%3D
                    group: cf-nel
                    max_age: 604800
            NEL:
              content:
                text/plain:
                  schema:
                    type: string
                  example:
                    success_fraction: 0
                    report_to: cf-nel
                    max_age: 604800
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: cloudflare
            CF-RAY:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 837551acfe6e68e4-CGK
            alt-svc:
              content:
                text/plain:
                  schema:
                    type: string
                  example: h3=":443"; ma=86400
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Errornotfund1"
                - example:
                    responseCode: '50051000'
                    responseMessage: Sistem mengalami gangguan, Mohon hubungi administrator
                    data: 
                    meta:
                      debug_param: Data Tidak Ditemukan
              example:
                responseCode: '50051000'
                responseMessage: Sistem mengalami gangguan, Mohon hubungi administrator
                data: 
                meta:
                  debug_param: Data Tidak Ditemukan
      deprecated: false
      servers:
      - url: http://example.com/account
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/1001701173"
          headers:
            X-PARTNER-ID: sgo-tester
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            content-type: application/json; charset=utf-8
            date: Thu, 15 Feb 2024 01:43:13 GMT
            content-length: '365'
            x-envoy-upstream-service-time: '4037'
            server: istio-envoy
            Content-Type: application/json
          body: "{\r\n  \"response_code\": \"200\",\r\n  \"response_message\": \"Sukses\",\r\n
            \ \"data\": {\r\n    \"accountNumber\": \"1001701181\",\r\n    \"accountName\":
            \"CIF CORP SATU\",\r\n    \"accountType\": \"GIRO\",\r\n    \"productCode\":
            \"1011\",\r\n    \"productName\": \"GIRO\",\r\n    \"currency\": \"IDR\",\r\n
            \   \"workingBalance\": 0,\r\n    \"referenceNumber\": \"202463348247\",\r\n
            \   \"dateTime\": \"20240215084310\",\r\n    \"customerNumber\": \"7529403288\",\r\n
            \   \"customerType\": \"Corporate\",\r\n    \"limitId\": \"XNC159\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Inquiry Account Number1
      x-server-name: Server 4
  "/credit-arrangements":
    post:
      tags:
      - Credit Arrangement
      summary: Create
      operationId: Create
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/CreateRequest"
              - example:
                  customerNumber: ''
                  amount: 25000000
                  startDate: '2023-04-28T13:37:50+07:00'
                  expireDate: '2025-05-31T13:37:50+07:00'
                  accountNumber: '1001701173'
            example:
              customerNumber: ''
              amount: 25000000
              startDate: '2023-04-28T13:37:50+07:00'
              expireDate: '2025-05-31T13:37:50+07:00'
              accountNumber: '1001701173'
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:02:28 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '228'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Succes"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      id: NKL502
                      notes: ''
                      startDate: '2022-04-28T13:37:50+07:00'
                      expireDate: '2022-05-31T13:37:50+07:00'
                      lastModifiedDate: '2023-11-30T10:03:18+07:00'
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  id: NKL502
                  notes: ''
                  startDate: '2022-04-28T13:37:50+07:00'
                  expireDate: '2022-05-31T13:37:50+07:00'
                  lastModifiedDate: '2023-11-30T10:03:18+07:00'
                meta: {}
        '422':
          description: Unprocessable Entity
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:33:25 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '129'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ErrorDuplicateCustomerNumber1"
                - example:
                    response_code: '422'
                    response_message: Data sudah ada
                    data: 
                    meta:
                      debug_param: Credit Arrangement Already Exist
              example:
                response_code: '422'
                response_message: Data sudah ada
                data: 
                meta:
                  debug_param: Credit Arrangement Already Exist
      deprecated: false
      servers:
      - url: https://localhost:8080/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/credit-arrangements"
          headers:
            X-PARTNER-ID: sgo-tester
            Content-Type: application/json
          body: "{\r\n  \"customerNumber\": \"\",\r\n  \"amount\": 25000000,\r\n  \"startDate\":
            \"2023-04-28T13:37:50+07:00\",\r\n  \"expireDate\": \"2025-05-31T13:37:50+07:00\",\r\n
            \ \"accountNumber\": \"1001701173\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Thu, 30 Nov 2023 03:02:28 GMT
            Content-Length: '228'
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"id\": \"NKL502\",\r\n    \"notes\":
            \"\",\r\n    \"startDate\": \"2022-04-28T13:37:50+07:00\",\r\n    \"expireDate\":
            \"2022-05-31T13:37:50+07:00\",\r\n    \"lastModifiedDate\": \"2023-11-30T10:03:18+07:00\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create
      x-server-name: Server 2
  "/credit-arrangements/{id}":
    patch:
      tags:
      - Credit Arrangement
      summary: Update
      operationId: Update
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: EUR254
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/UpdateRequest"
              - example:
                  startDate: '2023-05-22T13:37:50+07:00'
                  expireDate: '2024-05-30T13:37:50+07:00'
            example:
              startDate: '2023-05-22T13:37:50+07:00'
              expireDate: '2024-05-30T13:37:50+07:00'
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:02:28 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '228'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Succes"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      id: NKL502
                      notes: ''
                      startDate: '2022-04-28T13:37:50+07:00'
                      expireDate: '2022-05-31T13:37:50+07:00'
                      lastModifiedDate: '2023-11-30T10:03:18+07:00'
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  id: NKL502
                  notes: ''
                  startDate: '2022-04-28T13:37:50+07:00'
                  expireDate: '2022-05-31T13:37:50+07:00'
                  lastModifiedDate: '2023-11-30T10:03:18+07:00'
                meta: {}
        '422':
          description: Unprocessable Entity
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:33:25 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '129'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ErrorDuplicateCustomerNumber1"
                - example:
                    response_code: '422'
                    response_message: Data sudah ada
                    data: 
                    meta:
                      debug_param: Credit Arrangement Already Exist
              example:
                response_code: '422'
                response_message: Data sudah ada
                data: 
                meta:
                  debug_param: Credit Arrangement Already Exist
      deprecated: false
      servers:
      - url: https://localhost:8080/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: PATCH
          uri: "/credit-arrangements/EUR254"
          headers:
            X-PARTNER-ID: sgo-tester
            Content-Type: application/json
          body: "{\r\n  \"startDate\": \"2023-05-22T13:37:50+07:00\",\r\n  \"expireDate\":
            \"2024-05-30T13:37:50+07:00\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Thu, 30 Nov 2023 03:02:28 GMT
            Content-Length: '228'
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"id\": \"NKL502\",\r\n    \"notes\":
            \"\",\r\n    \"startDate\": \"2022-04-28T13:37:50+07:00\",\r\n    \"expireDate\":
            \"2022-05-31T13:37:50+07:00\",\r\n    \"lastModifiedDate\": \"2023-11-30T10:03:18+07:00\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Update
      x-server-name: Server 2
    get:
      tags:
      - Credit Arrangement
      summary: GetById
      operationId: GetById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: NKL502
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:32:33 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '398'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Succes2"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      id: NKL502
                      amount: 25000000
                      state: APPROVED
                      availableCreditAmount: 25000000
                      consumedCreditAmount: 0
                      startDate: '2022-04-28T13:37:50+07:00'
                      expireDate: '2022-05-31T13:37:50+07:00'
                      creationDate: '2023-11-30T10:03:19+07:00'
                      approvedDate: '2023-11-30T10:03:19+07:00'
                      lastModifiedDate: '2023-11-30T10:03:19+07:00'
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  id: NKL502
                  amount: 25000000
                  state: APPROVED
                  availableCreditAmount: 25000000
                  consumedCreditAmount: 0
                  startDate: '2022-04-28T13:37:50+07:00'
                  expireDate: '2022-05-31T13:37:50+07:00'
                  creationDate: '2023-11-30T10:03:19+07:00'
                  approvedDate: '2023-11-30T10:03:19+07:00'
                  lastModifiedDate: '2023-11-30T10:03:19+07:00'
                meta: {}
        '500':
          description: Internal Server Error
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 30 Nov 2023 03:34:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '230'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ErrorNotFound1"
                - example:
                    response_code: '500'
                    response_message: Sistem mengalami gangguan, Mohon hubungi administrator
                    data: 
                    meta:
                      debug_param: '[{"errorCode":2456,"errorReason":"INVALID_CREDIT_ARRANGEMENT_ID","errorSource":""}]'
              example:
                response_code: '500'
                response_message: Sistem mengalami gangguan, Mohon hubungi administrator
                data: 
                meta:
                  debug_param: '[{"errorCode":2456,"errorReason":"INVALID_CREDIT_ARRANGEMENT_ID","errorSource":""}]'
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/credit-arrangements/NKL502"
          headers:
            X-PARTNER-ID: sgo-tester
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Thu, 30 Nov 2023 03:32:33 GMT
            Content-Length: '398'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"id\": \"NKL502\",\r\n    \"amount\":
            25000000,\r\n    \"state\": \"APPROVED\",\r\n    \"availableCreditAmount\":
            25000000,\r\n    \"consumedCreditAmount\": 0,\r\n    \"startDate\": \"2022-04-28T13:37:50+07:00\",\r\n
            \   \"expireDate\": \"2022-05-31T13:37:50+07:00\",\r\n    \"creationDate\":
            \"2023-11-30T10:03:19+07:00\",\r\n    \"approvedDate\": \"2023-11-30T10:03:19+07:00\",\r\n
            \   \"lastModifiedDate\": \"2023-11-30T10:03:19+07:00\"\r\n  },\r\n  \"meta\":
            {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: GetById
      x-server-name: Server 1
  "/loans/{id}":
    get:
      tags:
      - LoanAccount
      summary: Get Loan
      operationId: GetLoan
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '94'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success2"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      loanID: SBEQ449
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  loanID: SBEQ449
                meta: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/loans/{id}"
          headers:
            X-PARTNER-ID: sgo-test
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length: '94'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"loanID\": \"SBEQ449\"\r\n  },\r\n
            \ \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get Loan
      x-server-name: Server 1
  "/loans/preview-schedule":
    post:
      tags:
      - LoanAccount
      summary: Preview Loan
      operationId: PreviewLoan
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/PreviewLoanRequest"
              - example:
                  interestRate: 9
                  loanAmount: 5000000
                  adminFee: 2666
                  originalLoanDate: '2024-01-05T13:37:50+07:00'
                  maturityDate: '2024-01-28T13:37:50+07:00'
            example:
              interestRate: 9
              loanAmount: 5000000
              adminFee: 2666
              originalLoanDate: '2024-01-05T13:37:50+07:00'
              maturityDate: '2024-01-28T13:37:50+07:00'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/loans/preview-schedule"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"interestRate\": 9,\r\n  \"loanAmount\": 5000000,\r\n  \"adminFee\":
            2666,\r\n  \"originalLoanDate\": \"2024-01-05T13:37:50+07:00\",\r\n  \"maturityDate\":
            \"2024-01-28T13:37:50+07:00\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Preview Loan
      x-server-name: Server 1
  "/loans":
    post:
      tags:
      - LoanAccount
      summary: Create Loan
      operationId: CreateLoan
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/CreateLoanRequest"
              - example:
                  limitID: ''
                  accountNumber: '1001701173'
                  interestRate: 9
                  loanAmount: 100000
                  originalLoanDate: 1701376993
                  maturityDate: 1701672263
            example:
              limitID: ''
              accountNumber: '1001701173'
              interestRate: 9
              loanAmount: 100000
              originalLoanDate: 1701376993
              maturityDate: 1701672263
        required: true
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '94'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success2"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      loanID: SBEQ449
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  loanID: SBEQ449
                meta: {}
      deprecated: false
      servers:
      - url: https://localhost:8080/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/loans"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"limitID\": \"\",\r\n  \"accountNumber\": \"1001701173\",\r\n
            \ \"interestRate\": 9,\r\n  \"loanAmount\": 100000,\r\n  \"originalLoanDate\":
            1701376993,\r\n  \"maturityDate\": 1701672263\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length: '94'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"loanID\": \"SBEQ449\"\r\n  },\r\n
            \ \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Loan
      x-server-name: Server 2
  "/loans/{id}/disburse":
    post:
      tags:
      - LoanAccount
      summary: Disbursement
      operationId: Disbursement
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/DisbursementRequest"
              - example:
                  beneficiaryAccountNumber: '1000887788'
                  adminFee: 25000
                  fee: 15000
            example:
              beneficiaryAccountNumber: '1000887788'
              adminFee: 25000
              fee: 15000
        required: true
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '94'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success2"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      loanID: SBEQ449
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  loanID: SBEQ449
                meta: {}
      deprecated: false
      servers:
      - url: https://localhost:8080/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/loans/{id}/disburse"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"beneficiaryAccountNumber\": \"1000887788\",\r\n  \"adminFee\":
            25000,\r\n  \"fee\": 15000\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length: '94'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"loanID\": \"SBEQ449\"\r\n  },\r\n
            \ \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Disbursement
      x-server-name: Server 2
  "/loans/{id}/repayment-preview":
    get:
      tags:
      - LoanAccount
      summary: Repayment Preview
      operationId: RepaymentPreview
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: JHSW767
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 19 Dec 2023 08:16:02 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '179'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success5"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      feeBalance: 0
                      interestBalance: 0
                      penaltyBalance: 0
                      principalBalance: 1000000
                      totalBalance: 1000000
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  feeBalance: 0
                  interestBalance: 0
                  penaltyBalance: 0
                  principalBalance: 1000000
                  totalBalance: 1000000
                meta: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/loans/JHSW767/repayment-preview"
          headers:
            X-PARTNER-ID: sgo-test
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Tue, 19 Dec 2023 08:16:02 GMT
            Content-Length: '179'
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"feeBalance\": 0,\r\n    \"interestBalance\":
            0,\r\n    \"penaltyBalance\": 0,\r\n    \"principalBalance\": 1000000,\r\n
            \   \"totalBalance\": 1000000\r\n  },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Repayment Preview
      x-server-name: Server 1
  "/loans/{id}/repayment":
    post:
      tags:
      - LoanAccount
      summary: Repayment
      operationId: Repayment
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/RepaymentRequest"
              - example:
                  accountNumber: '1000887788'
                  note: retry
            example:
              accountNumber: '1000887788'
              note: retry
        required: true
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '94'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success2"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      loanID: SBEQ449
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  loanID: SBEQ449
                meta: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/loans/{id}/repayment"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"accountNumber\": \"1000887788\",\r\n  \"note\": \"retry\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Mon, 04 Dec 2023 07:18:06 GMT
            Content-Length: '94'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"loanID\": \"SBEQ449\"\r\n  },\r\n
            \ \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Repayment
      x-server-name: Server 1
  "/loans/disbursement":
    post:
      tags:
      - LoanAccount
      summary: Disbursement
      operationId: PostDisbursement
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/DisbursementRequest1"
              - example:
                  limitID: ''
                  accountNumber: '1001701173'
                  InvoiceNo: No123123QWEQ
                  interestRate: 9
                  loanAmount: 1000000
                  originalLoanDate: '2023-12-05T13:37:50+07:00'
                  maturityDate: '2024-01-28T13:37:50+07:00'
                  beneficiaryAccountNumber: '1000887788'
                  PenaltyRate: 3
                  adminFee: 500
            example:
              limitID: ''
              accountNumber: '1001701173'
              InvoiceNo: No123123QWEQ
              interestRate: 9
              loanAmount: 1000000
              originalLoanDate: '2023-12-05T13:37:50+07:00'
              maturityDate: '2024-01-28T13:37:50+07:00'
              beneficiaryAccountNumber: '1000887788'
              PenaltyRate: 3
              adminFee: 500
        required: true
      responses:
        '201':
          description: Created
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 05 Dec 2023 05:35:51 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '681'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success12"
                - example:
                    response_code: '20151000'
                    response_message: Sukses
                    data:
                      Id: FKTV942
                      Amount: 100000
                      AdminFee: 0
                      CreditArrangementId: ADT383
                      CustomerId: 578f522c-a45f-45bc-8210-f5d0c11fad6f
                      DisbursementAmount: 0
                      DisbursementTransactionId: ''
                      DisburseCoreReference: ''
                      Fee: 0
                      HolderKey: 8ae381898c16418d018c37eb2b5b066b
                      HolderType: CLIENT
                      InterestRate: 9
                      PayoffAmount: 0
                      PayoffTransactionId: ''
                      PayoffCoreReference: ''
                      Status: NEW
                      StatusDescription: ''
                      originalLoanDate: 1701376993
                      maturityDate: 1701672263
                      LoanDisbursementDate: '0001-01-01T07:00:00+07:00'
                      LoanPayoffDate: '0001-01-01T07:00:00+07:00'
                      CreatedAt: '2023-12-05T11:25:52.617268+07:00'
                    meta: {}
              example:
                response_code: '20151000'
                response_message: Sukses
                data:
                  Id: FKTV942
                  Amount: 100000
                  AdminFee: 0
                  CreditArrangementId: ADT383
                  CustomerId: 578f522c-a45f-45bc-8210-f5d0c11fad6f
                  DisbursementAmount: 0
                  DisbursementTransactionId: ''
                  DisburseCoreReference: ''
                  Fee: 0
                  HolderKey: 8ae381898c16418d018c37eb2b5b066b
                  HolderType: CLIENT
                  InterestRate: 9
                  PayoffAmount: 0
                  PayoffTransactionId: ''
                  PayoffCoreReference: ''
                  Status: NEW
                  StatusDescription: ''
                  originalLoanDate: 1701376993
                  maturityDate: 1701672263
                  LoanDisbursementDate: '0001-01-01T07:00:00+07:00'
                  LoanPayoffDate: '0001-01-01T07:00:00+07:00'
                  CreatedAt: '2023-12-05T11:25:52.617268+07:00'
                meta: {}
      deprecated: false
      servers:
      - url: https://apigw-dev.bankina.id/exp-fscm/1.0
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/loans/disbursement"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"limitID\": \"\",\r\n  \"accountNumber\": \"1001701173\",\r\n
            \ \"InvoiceNo\": \"No123123QWEQ\",\r\n  \"interestRate\": 9,\r\n  \"loanAmount\":
            1000000,\r\n  \"originalLoanDate\": \"2023-12-05T13:37:50+07:00\",\r\n
            \ \"maturityDate\": \"2024-01-28T13:37:50+07:00\",\r\n  \"beneficiaryAccountNumber\":
            \"1000887788\",\r\n  \"PenaltyRate\": 3,\r\n  \"adminFee\": 500\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '201'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Tue, 05 Dec 2023 05:35:51 GMT
            Content-Length: '681'
          body: "{\r\n  \"response_code\": \"20151000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"Id\": \"FKTV942\",\r\n    \"Amount\":
            100000,\r\n    \"AdminFee\": 0,\r\n    \"CreditArrangementId\": \"ADT383\",\r\n
            \   \"CustomerId\": \"578f522c-a45f-45bc-8210-f5d0c11fad6f\",\r\n    \"DisbursementAmount\":
            0,\r\n    \"DisbursementTransactionId\": \"\",\r\n    \"DisburseCoreReference\":
            \"\",\r\n    \"Fee\": 0,\r\n    \"HolderKey\": \"8ae381898c16418d018c37eb2b5b066b\",\r\n
            \   \"HolderType\": \"CLIENT\",\r\n    \"InterestRate\": 9,\r\n    \"PayoffAmount\":
            0,\r\n    \"PayoffTransactionId\": \"\",\r\n    \"PayoffCoreReference\":
            \"\",\r\n    \"Status\": \"NEW\",\r\n    \"StatusDescription\": \"\",\r\n
            \   \"originalLoanDate\": 1701376993,\r\n    \"maturityDate\": 1701672263,\r\n
            \   \"LoanDisbursementDate\": \"0001-01-01T07:00:00+07:00\",\r\n    \"LoanPayoffDate\":
            \"0001-01-01T07:00:00+07:00\",\r\n    \"CreatedAt\": \"2023-12-05T11:25:52.617268+07:00\"\r\n
            \ },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Disbursement1
      x-server-name: Server 3
  "/access-token":
    post:
      tags:
      - Proc
      summary: Access-Token
      operationId: Access-Token
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-tester
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/Access-Token-Request"
              - example:
                  loginClient: client_credentials
                  clientId: sgo-tester
                  clientSecret: a5e7bf62-2022-4501-ab77-2fbeb4235240
            example:
              loginClient: client_credentials
              clientId: sgo-tester
              clientSecret: a5e7bf62-2022-4501-ab77-2fbeb4235240
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 17 Nov 2023 07:32:01 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/SuccessRefreshtoken"
                - example:
                    response_code: '20051000'
                    response_message: Sukses
                    data:
                      accessToken: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDAyMDY2NjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiMDE2OTgxYmYtYTQ1Ni00Y2JmLTg1MjUtYTVkYzkxM2RlNTU0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiIzNjI2OTMxZS03M2U3LTQ3YjctYjA3YS0zYzQwNzgwNGZjNzIiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.m2eVxXvifscLDHmp2OYplsjuNMO1hfHkMfMb4Ij-xdOJIfA1BKusfgCimx5eLhzRwsI9D9pOJ1wXs0mEEId-cc1A1uTKW6LQ73Nx2S-Y337hlQG4-x1xT7853p3ukTx3Qx9C93bzoySZJrujxibPyF0vxCJJ7qo_ZRnVoqmiLIIF4LgpmFzGU1K3n3aq3mAJTHZa75jyJkQOO8kuvzrbmPRmTmqr3Imh9E75Il4hDyohcJUoSO836r98EPpqJfjsHa2uoJFecjvzMfuFZw2rc9eAD3UDXL-D-nc7BP-O5v0_KXXaFVm4WRqiK12WiLWzlU9FHAqzGCWx5oUw3K_68w
                      refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDAyMDgxNjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiYTU5NDQwMGYtYWUwZC00Y2RlLThmN2ItZGViYWM3Mjc3NzBjIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiJ9.D9mkL0ww_fNkDZuGnX7cV7DgHIW3e_AzQ8crnFF13xg
                      tokenType: Bearer
                      expiresIn: 300
                    meta: {}
              example:
                response_code: '20051000'
                response_message: Sukses
                data:
                  accessToken: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDAyMDY2NjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiMDE2OTgxYmYtYTQ1Ni00Y2JmLTg1MjUtYTVkYzkxM2RlNTU0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiIzNjI2OTMxZS03M2U3LTQ3YjctYjA3YS0zYzQwNzgwNGZjNzIiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.m2eVxXvifscLDHmp2OYplsjuNMO1hfHkMfMb4Ij-xdOJIfA1BKusfgCimx5eLhzRwsI9D9pOJ1wXs0mEEId-cc1A1uTKW6LQ73Nx2S-Y337hlQG4-x1xT7853p3ukTx3Qx9C93bzoySZJrujxibPyF0vxCJJ7qo_ZRnVoqmiLIIF4LgpmFzGU1K3n3aq3mAJTHZa75jyJkQOO8kuvzrbmPRmTmqr3Imh9E75Il4hDyohcJUoSO836r98EPpqJfjsHa2uoJFecjvzMfuFZw2rc9eAD3UDXL-D-nc7BP-O5v0_KXXaFVm4WRqiK12WiLWzlU9FHAqzGCWx5oUw3K_68w
                  refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDAyMDgxNjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiYTU5NDQwMGYtYWUwZC00Y2RlLThmN2ItZGViYWM3Mjc3NzBjIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiJ9.D9mkL0ww_fNkDZuGnX7cV7DgHIW3e_AzQ8crnFF13xg
                  tokenType: Bearer
                  expiresIn: 300
                meta: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/access-token"
          headers:
            X-PARTNER-ID: sgo-tester
            Content-Type: application/json
          body: "{\r\n  \"loginClient\": \"client_credentials\",\r\n  \"clientId\":
            \"sgo-tester\",\r\n  \"clientSecret\": \"a5e7bf62-2022-4501-ab77-2fbeb4235240\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Fri, 17 Nov 2023 07:32:01 GMT
            Transfer-Encoding: chunked
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDAyMDY2NjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiMDE2OTgxYmYtYTQ1Ni00Y2JmLTg1MjUtYTVkYzkxM2RlNTU0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiIzNjI2OTMxZS03M2U3LTQ3YjctYjA3YS0zYzQwNzgwNGZjNzIiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.m2eVxXvifscLDHmp2OYplsjuNMO1hfHkMfMb4Ij-xdOJIfA1BKusfgCimx5eLhzRwsI9D9pOJ1wXs0mEEId-cc1A1uTKW6LQ73Nx2S-Y337hlQG4-x1xT7853p3ukTx3Qx9C93bzoySZJrujxibPyF0vxCJJ7qo_ZRnVoqmiLIIF4LgpmFzGU1K3n3aq3mAJTHZa75jyJkQOO8kuvzrbmPRmTmqr3Imh9E75Il4hDyohcJUoSO836r98EPpqJfjsHa2uoJFecjvzMfuFZw2rc9eAD3UDXL-D-nc7BP-O5v0_KXXaFVm4WRqiK12WiLWzlU9FHAqzGCWx5oUw3K_68w\",\r\n
            \   \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDAyMDgxNjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiYTU5NDQwMGYtYWUwZC00Y2RlLThmN2ItZGViYWM3Mjc3NzBjIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiJ9.D9mkL0ww_fNkDZuGnX7cV7DgHIW3e_AzQ8crnFF13xg\",\r\n
            \   \"tokenType\": \"Bearer\",\r\n    \"expiresIn\": 300\r\n  },\r\n  \"meta\":
            {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Access-Token
      - request:
          method: POST
          uri: "/access-token"
          headers:
            X-PARTNER-ID: sgo-tester
            Content-Type: application/json
          body: "{\r\n  \"loginClient\": \"client_credentials\",\r\n  \"clientId\":
            \"sgo-tester\",\r\n  \"clientSecret\": \"a5e7bf62-2022-4501-ab77-2fbeb4235240\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
          body: "{\r\n  \"response_code\": \"20051000\",\r\n  \"response_message\":
            \"Sukses\",\r\n  \"data\": {\r\n    \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDA1MjgyOTIsImlhdCI6MTcwMDUyNzk5MiwianRpIjoiNzIwNWVkNzAtNzE5ZC00MzdkLWJhY2QtYjIxZTQ1YjY1ODZhIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiJmZDZmMmI5ZS04MWIwLTQ2MGEtOTNiMC00YWFmNzI1NTYxZmMiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.q22NQ9SAvmPbc7_yo0LhfLUaDRK3o8T-PbG2mqa4KmOZxAHSbWuoQm6CBwSmRDmUkNiioLnvsHV0HbB8YZf78QxAc-y3dyBiIPGUlquSS8ZlUFXhrXsiwE2dPeKX9JmW7LP3XtPFmAb8_znP9nJeDdM2O0dIqC1jOzDGzeGORLj3g_YoPrDq7CVfOWkZyjZ61xpqeEM4MggV_XKHdYe8ltx8FTk1191MZ9Mp09dWkwZy-HogajGpWKfgaIzQ9U5g2yeSYEcXJvdAqZQZ2PagjCu043qH_qjV_UqKoG5yWyUkbY0_LDNHvyfZt7wSza6wttrVl4aA9hnI84tJQcUHKA\",\r\n
            \   \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDA1Mjk3OTIsImlhdCI6MTcwMDUyNzk5MiwianRpIjoiYjlkNGQ0YjktOTRiNy00ZmRlLTgwNjAtNjBmMDNhZjdmMzM0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyJ9.Ox_tNAqyiNdi5Ro90xcocW1cWOaUdhHhXvIw3czuhR4\",\r\n
            \   \"tokenType\": \"Bearer\",\r\n    \"expiresIn\": 300\r\n  },\r\n  \"meta\":
            {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Access-Token1
      x-server-name: Server 1
  "/otp/generate":
    post:
      tags:
      - Token
      summary: Generate
      operationId: Generate
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/GenerateRequest"
              - example:
                  channel: SMS
                  type: REGISTRATION
                  mobilePhone: '085523836731'
                  email: donoson@yahoo.com
            example:
              channel: SMS
              type: REGISTRATION
              mobilePhone: '085523836731'
              email: donoson@yahoo.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://apigw-dev.bankina.id/exp-fscm/1.0
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/otp/generate"
          headers:
            Content-Type: application/json
          body: "{\r\n  \"channel\": \"SMS\",\r\n  \"type\": \"REGISTRATION\",\r\n
            \ \"mobilePhone\": \"085523836731\",\r\n  \"email\": \"donoson@yahoo.com\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Generate
      x-server-name: Server 3
  "/notifications":
    post:
      tags:
      - Notif
      summary: Send Message
      operationId: SendMessage
      parameters:
      - name: X-PARTNER-ID
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: sgo-test
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/SendMessageRequest"
              - example:
                  type: wa
                  template: 648029efcd8d1201661dacb3
                  recipient: '085523836730'
                  params:
                    components:
                    - type: body
                      parameters:
                      - type: text
                        text: 1331 a/n Rovi Fauzan Akbar
                      - type: text
                        text: 5000.000.000
            example:
              type: wa
              template: 648029efcd8d1201661dacb3
              recipient: '085523836730'
              params:
                components:
                - type: body
                  parameters:
                  - type: text
                    text: 1331 a/n Rovi Fauzan Akbar
                  - type: text
                    text: 5000.000.000
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Fri, 15 Dec 2023 03:51:30 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '573'
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Success11"
                - example:
                    responseCode: '200'
                    responseMessage: Sukses
                    data:
                      installments:
                      - number: '1'
                        dueDate: '2024-01-28T07:00:00+07:00'
                        state: PENDING
                        isPaymentHoliday: false
                        principal:
                          amount:
                            expected: 5000000
                            paid: 0
                            due: 5000000
                        interest:
                          amount:
                            expected: 28750
                            paid: 0
                            due: 28750
                          tax:
                            expected: 0
                            paid: 0
                            due: 0
                        fee:
                          amount:
                            expected: 0
                            paid: 0
                            due: 0
                          tax:
                            expected: 0
                            paid: 0
                            due: 0
                        penalty:
                          amount:
                            expected: 0
                            paid: 0
                            due: 0
                          tax:
                            expected: 0
                            paid: 0
                            due: 0
                      currency:
                        currencyCode: IDR
                        code: IDR
                    meta: {}
              example:
                responseCode: '200'
                responseMessage: Sukses
                data:
                  installments:
                  - number: '1'
                    dueDate: '2024-01-28T07:00:00+07:00'
                    state: PENDING
                    isPaymentHoliday: false
                    principal:
                      amount:
                        expected: 5000000
                        paid: 0
                        due: 5000000
                    interest:
                      amount:
                        expected: 28750
                        paid: 0
                        due: 28750
                      tax:
                        expected: 0
                        paid: 0
                        due: 0
                    fee:
                      amount:
                        expected: 0
                        paid: 0
                        due: 0
                      tax:
                        expected: 0
                        paid: 0
                        due: 0
                    penalty:
                      amount:
                        expected: 0
                        paid: 0
                        due: 0
                      tax:
                        expected: 0
                        paid: 0
                        due: 0
                  currency:
                    currencyCode: IDR
                    code: IDR
                meta: {}
      deprecated: false
      servers:
      - url: https://dev-exp-api-fscm.bankina.id/v1
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: POST
          uri: "/notifications"
          headers:
            X-PARTNER-ID: sgo-test
            Content-Type: application/json
          body: "{\r\n  \"type\": \"wa\",\r\n  \"template\": \"648029efcd8d1201661dacb3\",\r\n
            \ \"recipient\": \"085523836730\",\r\n  \"params\": {\r\n    \"components\":
            [\r\n      {\r\n        \"type\": \"body\",\r\n        \"parameters\":
            [\r\n          {\r\n            \"type\": \"text\",\r\n            \"text\":
            \"1331 a/n Rovi Fauzan Akbar\"\r\n          },\r\n          {\r\n            \"type\":
            \"text\",\r\n            \"text\": \"5000.000.000\"\r\n          }\r\n
            \       ]\r\n      }\r\n    ]\r\n  }\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers:
            Content-Type: application/json; charset=utf-8
            Date: Fri, 15 Dec 2023 03:51:30 GMT
            Content-Length: '573'
          body: "{\r\n  \"responseCode\": \"200\",\r\n  \"responseMessage\": \"Sukses\",\r\n
            \ \"data\": {\r\n    \"installments\": [\r\n      {\r\n        \"number\":
            \"1\",\r\n        \"dueDate\": \"2024-01-28T07:00:00+07:00\",\r\n        \"state\":
            \"PENDING\",\r\n        \"isPaymentHoliday\": false,\r\n        \"principal\":
            {\r\n          \"amount\": {\r\n            \"expected\": 5000000,\r\n
            \           \"paid\": 0,\r\n            \"due\": 5000000\r\n          }\r\n
            \       },\r\n        \"interest\": {\r\n          \"amount\": {\r\n            \"expected\":
            28750,\r\n            \"paid\": 0,\r\n            \"due\": 28750\r\n          },\r\n
            \         \"tax\": {\r\n            \"expected\": 0,\r\n            \"paid\":
            0,\r\n            \"due\": 0\r\n          }\r\n        },\r\n        \"fee\":
            {\r\n          \"amount\": {\r\n            \"expected\": 0,\r\n            \"paid\":
            0,\r\n            \"due\": 0\r\n          },\r\n          \"tax\": {\r\n
            \           \"expected\": 0,\r\n            \"paid\": 0,\r\n            \"due\":
            0\r\n          }\r\n        },\r\n        \"penalty\": {\r\n          \"amount\":
            {\r\n            \"expected\": 0,\r\n            \"paid\": 0,\r\n            \"due\":
            0\r\n          },\r\n          \"tax\": {\r\n            \"expected\":
            0,\r\n            \"paid\": 0,\r\n            \"due\": 0\r\n          }\r\n
            \       }\r\n      }\r\n    ],\r\n    \"currency\": {\r\n      \"currencyCode\":
            \"IDR\",\r\n      \"code\": \"IDR\"\r\n    }\r\n  },\r\n  \"meta\": {}\r\n}"
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Send Message
      x-server-name: Server 5
  "/97125121-ea32-4ee0-8706-5b7375e83e94":
    get:
      tags:
      - Misc
      summary: https://dev-proc-api-channeling.bankina.id/v1/user/97125121-ea32-4ee0-8706-5b7375e83e94
      operationId: https://dev-proc-api-channeling.bankina.id/v1/user/97125121-ea32-4ee0-8706-5b7375e83e94
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://dev-proc-api-channeling.bankina.id/v1/user
        variables: {}
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
        ErrorTemplates: {}
        SkipAdditionalHeaders: false
      x-unitTests:
      - request:
          method: GET
          uri: "/97125121-ea32-4ee0-8706-5b7375e83e94"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: https://dev-proc-api-channeling.bankina.id/v1/user/97125121-ea32-4ee0-8706-5b7375e83e94
      x-server-name: Server 8
components:
  schemas:
    GetAccountBalanceRequest:
      title: GetAccountBalanceRequest
      required:
      - dateTime
      - referenceNumber
      - accountNumber
      - transactionType
      type: object
      properties:
        dateTime:
          type: string
        referenceNumber:
          type: string
        accountNumber:
          type: string
        transactionType:
          type: string
      example:
        dateTime: '20231129140213'
        referenceNumber: '202311082604'
        accountNumber: '1000241969'
        transactionType: FINANCIAL
    GetIndividuRequest:
      title: GetIndividuRequest
      required:
      - dateTime
      - referenceNumber
      - accountNumber
      - transactionType
      type: object
      properties:
        dateTime:
          type: string
        referenceNumber:
          type: string
        accountNumber:
          type: string
        transactionType:
          type: string
      example:
        dateTime: '20231129140213'
        referenceNumber: '202311082604'
        accountNumber: '1000241969'
        transactionType: FINANCIAL
    GetCorporateRequest:
      title: GetCorporateRequest
      required:
      - dateTime
      - referenceNumber
      - accountNumber
      - transactionType
      type: object
      properties:
        dateTime:
          type: string
        referenceNumber:
          type: string
        accountNumber:
          type: string
        transactionType:
          type: string
      example:
        dateTime: '20231129140213'
        referenceNumber: '202311082604'
        accountNumber: '1000241969'
        transactionType: FINANCIAL
    Success:
      title: Success
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          encodedKey: 8ae381898c16418d018c39baa034074e
          id: '9979641507'
          state: ACTIVE
          firstName: XXX1010036875YYY
          lastName: XXX1010036875YYY
          mobilePhone: ''
          emailAddress: ''
          preferredLanguage: ENGLISH
          birthDate: '2017-10-02'
          gender: ''
          notes: Create CIF Account for FSCM
          assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
          clientRoleKey: 8a8e8e987c560e38017c5d844082016c
          loanCycle: 5
          groupLoanCycle: 0
          groupKeys: []
          creationDate: '2023-12-05T18:26:21+07:00'
          approvedDate: '2023-12-05T18:26:21+07:00'
          lastModifiedDate: '2023-12-06T08:54:20+07:00'
          activationDate: '2023-12-06T08:48:51+07:00'
          addresses:
          - city: Town-country10100368
            country: ''
            indexInList: 0
            latitude: 0
            line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
            longitude: 0
            postcode: ''
            region: ''
            encodedKey: 8ae381898c16418d018c39baa034074f
            parentKey: 8ae381898c16418d018c39baa034074e
            line2: ''
          idDocuments: []
          _cfsPersonalData:
            cfKtpNo: ''
        meta: {}
    Data:
      title: Data
      required:
      - encodedKey
      - id
      - state
      - firstName
      - lastName
      - mobilePhone
      - emailAddress
      - preferredLanguage
      - birthDate
      - gender
      - notes
      - assignedBranchKey
      - clientRoleKey
      - loanCycle
      - groupLoanCycle
      - groupKeys
      - creationDate
      - approvedDate
      - lastModifiedDate
      - activationDate
      - addresses
      - idDocuments
      - _cfsPersonalData
      type: object
      properties:
        encodedKey:
          type: string
        id:
          type: string
        state:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mobilePhone:
          type: string
        emailAddress:
          type: string
        preferredLanguage:
          type: string
        birthDate:
          type: string
        gender:
          type: string
        notes:
          type: string
        assignedBranchKey:
          type: string
        clientRoleKey:
          type: string
        loanCycle:
          type: integer
          format: int32
        groupLoanCycle:
          type: integer
          format: int32
        groupKeys:
          type: array
          items:
            type: string
          description: ''
        creationDate:
          type: string
        approvedDate:
          type: string
        lastModifiedDate:
          type: string
        activationDate:
          type: string
        addresses:
          type: array
          items:
            "$ref": "#/components/schemas/Address"
          description: ''
        idDocuments:
          type: array
          items:
            type: string
          description: ''
        _cfsPersonalData:
          allOf:
          - "$ref": "#/components/schemas/CfsPersonalData"
          - {}
      example:
        encodedKey: 8ae381898c16418d018c39baa034074e
        id: '9979641507'
        state: ACTIVE
        firstName: XXX1010036875YYY
        lastName: XXX1010036875YYY
        mobilePhone: ''
        emailAddress: ''
        preferredLanguage: ENGLISH
        birthDate: '2017-10-02'
        gender: ''
        notes: Create CIF Account for FSCM
        assignedBranchKey: 8a8e86237ca910b6017cc0243c3a62ff
        clientRoleKey: 8a8e8e987c560e38017c5d844082016c
        loanCycle: 5
        groupLoanCycle: 0
        groupKeys: []
        creationDate: '2023-12-05T18:26:21+07:00'
        approvedDate: '2023-12-05T18:26:21+07:00'
        lastModifiedDate: '2023-12-06T08:54:20+07:00'
        activationDate: '2023-12-06T08:48:51+07:00'
        addresses:
        - city: Town-country10100368
          country: ''
          indexInList: 0
          latitude: 0
          line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
          longitude: 0
          postcode: ''
          region: ''
          encodedKey: 8ae381898c16418d018c39baa034074f
          parentKey: 8ae381898c16418d018c39baa034074e
          line2: ''
        idDocuments: []
        _cfsPersonalData:
          cfKtpNo: ''
    Address:
      title: Address
      required:
      - city
      - country
      - indexInList
      - latitude
      - line1
      - longitude
      - postcode
      - region
      - encodedKey
      - parentKey
      - line2
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        indexInList:
          type: integer
          format: int32
        latitude:
          type: integer
          format: int32
        line1:
          type: string
        longitude:
          type: integer
          format: int32
        postcode:
          type: string
        region:
          type: string
        encodedKey:
          type: string
        parentKey:
          type: string
        line2:
          type: string
      example:
        city: Town-country10100368
        country: ''
        indexInList: 0
        latitude: 0
        line1: GD PLAZA MUTIARA LT 21 SUITE 2105   Town-country1010036875  12950
        longitude: 0
        postcode: ''
        region: ''
        encodedKey: 8ae381898c16418d018c39baa034074f
        parentKey: 8ae381898c16418d018c39baa034074e
        line2: ''
    CfsPersonalData:
      title: CfsPersonalData
      required:
      - cfKtpNo
      type: object
      properties:
        cfKtpNo:
          type: string
      example:
        cfKtpNo: ''
    Meta:
      title: Meta
      required:
      - debug_param
      type: object
      properties:
        debug_param:
          type: string
      example:
        debug_param: '[{"errorCode":301,"errorReason":"INVALID_CLIENT_ID","errorSource":""}]'
    Failed1:
      title: Failed1
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        response_code: '500'
        response_message: Sistem mengalami gangguan, Mohon hubungi administrator
        data: 
        meta:
          debug_param: '[{"errorCode":301,"errorReason":"INVALID_CLIENT_ID","errorSource":""}]'
    Success1:
      title: Success1
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data1"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          id: ebbe594b-bc71-47cd-81fe-054dde59fc7e
          partnerId: ''
          accountNumber: '1000887788'
          cif: '9979641507'
          cifEncodeKey: 8ae381898c16418d018c39baa034074e
          customerType: Corporate
          createdAt: '2023-12-05T18:25:21.23227+07:00'
        meta: {}
    Data1:
      title: Data1
      required:
      - id
      - partnerId
      - accountNumber
      - cif
      - cifEncodeKey
      - customerType
      - createdAt
      type: object
      properties:
        id:
          type: string
        partnerId:
          type: string
        accountNumber:
          type: string
        cif:
          type: string
        cifEncodeKey:
          type: string
        customerType:
          type: string
        createdAt:
          type: string
      example:
        id: ebbe594b-bc71-47cd-81fe-054dde59fc7e
        partnerId: ''
        accountNumber: '1000887788'
        cif: '9979641507'
        cifEncodeKey: 8ae381898c16418d018c39baa034074e
        customerType: Corporate
        createdAt: '2023-12-05T18:25:21.23227+07:00'
    Failed4041:
      title: Failed4041
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        response_code: '404'
        response_message: Record not found
        data: 
        meta:
          debug_param: record not found
    CreateRequest:
      title: CreateRequest
      required:
      - customerNumber
      - amount
      - startDate
      - expireDate
      - accountNumber
      type: object
      properties:
        customerNumber:
          type: string
        amount:
          type: integer
          format: int32
        startDate:
          type: string
        expireDate:
          type: string
        accountNumber:
          type: string
      example:
        customerNumber: ''
        amount: 25000000
        startDate: '2023-04-28T13:37:50+07:00'
        expireDate: '2025-05-31T13:37:50+07:00'
        accountNumber: '1001701173'
    Succes:
      title: Succes
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data2"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          id: NKL502
          notes: ''
          startDate: '2022-04-28T13:37:50+07:00'
          expireDate: '2022-05-31T13:37:50+07:00'
          lastModifiedDate: '2023-11-30T10:03:18+07:00'
        meta: {}
    Data2:
      title: Data2
      required:
      - id
      - notes
      - startDate
      - expireDate
      - lastModifiedDate
      type: object
      properties:
        id:
          type: string
        notes:
          type: string
        startDate:
          type: string
        expireDate:
          type: string
        lastModifiedDate:
          type: string
      example:
        id: NKL502
        notes: ''
        startDate: '2022-04-28T13:37:50+07:00'
        expireDate: '2022-05-31T13:37:50+07:00'
        lastModifiedDate: '2023-11-30T10:03:18+07:00'
    ErrorDuplicateCustomerNumber1:
      title: ErrorDuplicateCustomerNumber1
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        response_code: '422'
        response_message: Data sudah ada
        data: 
        meta:
          debug_param: Credit Arrangement Already Exist
    UpdateRequest:
      title: UpdateRequest
      required:
      - startDate
      - expireDate
      type: object
      properties:
        startDate:
          type: string
        expireDate:
          type: string
      example:
        startDate: '2023-05-22T13:37:50+07:00'
        expireDate: '2024-05-30T13:37:50+07:00'
    Succes2:
      title: Succes2
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data4"
          - {}
        meta:
          type: object
      example:
        response_code: '20151000'
        response_message: Sukses
        data:
          id: NKL502
          amount: 25000000
          state: APPROVED
          availableCreditAmount: 25000000
          consumedCreditAmount: 0
          startDate: '2022-04-28T13:37:50+07:00'
          expireDate: '2022-05-31T13:37:50+07:00'
          creationDate: '2023-11-30T10:03:19+07:00'
          approvedDate: '2023-11-30T10:03:19+07:00'
          lastModifiedDate: '2023-11-30T10:03:19+07:00'
        meta: {}
    Data4:
      title: Data4
      required:
      - id
      - amount
      - state
      - availableCreditAmount
      - consumedCreditAmount
      - startDate
      - expireDate
      - creationDate
      - approvedDate
      - lastModifiedDate
      type: object
      properties:
        id:
          type: string
        amount:
          type: integer
          format: int32
        state:
          type: string
        availableCreditAmount:
          type: integer
          format: int32
        consumedCreditAmount:
          type: integer
          format: int32
        startDate:
          type: string
        expireDate:
          type: string
        creationDate:
          type: string
        approvedDate:
          type: string
        lastModifiedDate:
          type: string
      example:
        id: NKL502
        amount: 25000000
        state: APPROVED
        availableCreditAmount: 25000000
        consumedCreditAmount: 0
        startDate: '2022-04-28T13:37:50+07:00'
        expireDate: '2022-05-31T13:37:50+07:00'
        creationDate: '2023-11-30T10:03:19+07:00'
        approvedDate: '2023-11-30T10:03:19+07:00'
        lastModifiedDate: '2023-11-30T10:03:19+07:00'
    ErrorNotFound1:
      title: ErrorNotFound1
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        response_code: '500'
        response_message: Sistem mengalami gangguan, Mohon hubungi administrator
        data: 
        meta:
          debug_param: '[{"errorCode":2456,"errorReason":"INVALID_CREDIT_ARRANGEMENT_ID","errorSource":""}]'
    Success2:
      title: Success2
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data5"
          - {}
        meta:
          type: object
      example:
        response_code: '20151000'
        response_message: Sukses
        data:
          loanID: SBEQ449
        meta: {}
    Data5:
      title: Data5
      required:
      - loanID
      type: object
      properties:
        loanID:
          type: string
      example:
        loanID: SBEQ449
    PreviewLoanRequest:
      title: PreviewLoanRequest
      required:
      - interestRate
      - loanAmount
      - adminFee
      - originalLoanDate
      - maturityDate
      type: object
      properties:
        interestRate:
          type: integer
          format: int32
        loanAmount:
          type: integer
          format: int32
        adminFee:
          type: integer
          format: int32
        originalLoanDate:
          type: string
        maturityDate:
          type: string
      example:
        interestRate: 9
        loanAmount: 5000000
        adminFee: 2666
        originalLoanDate: '2024-01-05T13:37:50+07:00'
        maturityDate: '2024-01-28T13:37:50+07:00'
    CreateLoanRequest:
      title: CreateLoanRequest
      required:
      - limitID
      - accountNumber
      - interestRate
      - loanAmount
      - originalLoanDate
      - maturityDate
      type: object
      properties:
        limitID:
          type: string
        accountNumber:
          type: string
        interestRate:
          type: integer
          format: int32
        loanAmount:
          type: integer
          format: int32
        originalLoanDate:
          type: integer
          format: int32
        maturityDate:
          type: integer
          format: int32
      example:
        limitID: ''
        accountNumber: '1001701173'
        interestRate: 9
        loanAmount: 100000
        originalLoanDate: 1701376993
        maturityDate: 1701672263
    DisbursementRequest:
      title: DisbursementRequest
      required:
      - beneficiaryAccountNumber
      - adminFee
      - fee
      type: object
      properties:
        beneficiaryAccountNumber:
          type: string
        adminFee:
          type: integer
          format: int32
        fee:
          type: integer
          format: int32
      example:
        beneficiaryAccountNumber: '1000887788'
        adminFee: 25000
        fee: 15000
    Success5:
      title: Success5
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data8"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          feeBalance: 0
          interestBalance: 0
          penaltyBalance: 0
          principalBalance: 1000000
          totalBalance: 1000000
        meta: {}
    Data8:
      title: Data8
      required:
      - feeBalance
      - interestBalance
      - penaltyBalance
      - principalBalance
      - totalBalance
      type: object
      properties:
        feeBalance:
          type: integer
          format: int32
        interestBalance:
          type: integer
          format: int32
        penaltyBalance:
          type: integer
          format: int32
        principalBalance:
          type: integer
          format: int32
        totalBalance:
          type: integer
          format: int32
      example:
        feeBalance: 0
        interestBalance: 0
        penaltyBalance: 0
        principalBalance: 1000000
        totalBalance: 1000000
    RepaymentRequest:
      title: RepaymentRequest
      required:
      - accountNumber
      - note
      type: object
      properties:
        accountNumber:
          type: string
        note:
          type: string
      example:
        accountNumber: '1000887788'
        note: retry
    Access-Token-Request:
      title: Access-Token-Request
      required:
      - loginClient
      - clientId
      - clientSecret
      type: object
      properties:
        loginClient:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
      example:
        loginClient: client_credentials
        clientId: sgo-tester
        clientSecret: a5e7bf62-2022-4501-ab77-2fbeb4235240
    SuccessRefreshtoken:
      title: SuccessRefreshtoken
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data10"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          accessToken: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDAyMDY2NjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiMDE2OTgxYmYtYTQ1Ni00Y2JmLTg1MjUtYTVkYzkxM2RlNTU0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiIzNjI2OTMxZS03M2U3LTQ3YjctYjA3YS0zYzQwNzgwNGZjNzIiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.m2eVxXvifscLDHmp2OYplsjuNMO1hfHkMfMb4Ij-xdOJIfA1BKusfgCimx5eLhzRwsI9D9pOJ1wXs0mEEId-cc1A1uTKW6LQ73Nx2S-Y337hlQG4-x1xT7853p3ukTx3Qx9C93bzoySZJrujxibPyF0vxCJJ7qo_ZRnVoqmiLIIF4LgpmFzGU1K3n3aq3mAJTHZa75jyJkQOO8kuvzrbmPRmTmqr3Imh9E75Il4hDyohcJUoSO836r98EPpqJfjsHa2uoJFecjvzMfuFZw2rc9eAD3UDXL-D-nc7BP-O5v0_KXXaFVm4WRqiK12WiLWzlU9FHAqzGCWx5oUw3K_68w
          refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDAyMDgxNjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiYTU5NDQwMGYtYWUwZC00Y2RlLThmN2ItZGViYWM3Mjc3NzBjIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiJ9.D9mkL0ww_fNkDZuGnX7cV7DgHIW3e_AzQ8crnFF13xg
          tokenType: Bearer
          expiresIn: 300
        meta: {}
    Data10:
      title: Data10
      required:
      - accessToken
      - refreshToken
      - tokenType
      - expiresIn
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
        expiresIn:
          type: integer
          format: int32
      example:
        accessToken: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDAyMDY2NjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiMDE2OTgxYmYtYTQ1Ni00Y2JmLTg1MjUtYTVkYzkxM2RlNTU0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiIzNjI2OTMxZS03M2U3LTQ3YjctYjA3YS0zYzQwNzgwNGZjNzIiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.m2eVxXvifscLDHmp2OYplsjuNMO1hfHkMfMb4Ij-xdOJIfA1BKusfgCimx5eLhzRwsI9D9pOJ1wXs0mEEId-cc1A1uTKW6LQ73Nx2S-Y337hlQG4-x1xT7853p3ukTx3Qx9C93bzoySZJrujxibPyF0vxCJJ7qo_ZRnVoqmiLIIF4LgpmFzGU1K3n3aq3mAJTHZa75jyJkQOO8kuvzrbmPRmTmqr3Imh9E75Il4hDyohcJUoSO836r98EPpqJfjsHa2uoJFecjvzMfuFZw2rc9eAD3UDXL-D-nc7BP-O5v0_KXXaFVm4WRqiK12WiLWzlU9FHAqzGCWx5oUw3K_68w
        refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDAyMDgxNjksImlhdCI6MTcwMDIwNjM2OSwianRpIjoiYTU5NDQwMGYtYWUwZC00Y2RlLThmN2ItZGViYWM3Mjc3NzBjIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjM2MjY5MzFlLTczZTctNDdiNy1iMDdhLTNjNDA3ODA0ZmM3MiJ9.D9mkL0ww_fNkDZuGnX7cV7DgHIW3e_AzQ8crnFF13xg
        tokenType: Bearer
        expiresIn: 300
    SuccessNewtoken:
      title: SuccessNewtoken
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data10"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          accessToken: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRTjNPdFdGUXlGUHpFaUVMM1lNZTY1amdDYkxQazBkREk5VUQ4RERSOFR3In0.eyJleHAiOjE3MDA1MjgyOTIsImlhdCI6MTcwMDUyNzk5MiwianRpIjoiNzIwNWVkNzAtNzE5ZC00MzdkLWJhY2QtYjIxZTQ1YjY1ODZhIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOGM1MzM3MzYtODI2NS00NzdmLWI0NDUtOWYxZGZmZTM1ZGRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoic2dvLXRlc3RlciIsInNlc3Npb25fc3RhdGUiOiJmZDZmMmI5ZS04MWIwLTQ2MGEtOTNiMC00YWFmNzI1NTYxZmMiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtc2NmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyIsImNsaWVudEhvc3QiOiIzNC4xMDEuNDcuMTkwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjbGllbnRJZCI6InNnby10ZXN0ZXIiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtc2dvLXRlc3RlciIsImNsaWVudEFkZHJlc3MiOiIzNC4xMDEuNDcuMTkwIn0.q22NQ9SAvmPbc7_yo0LhfLUaDRK3o8T-PbG2mqa4KmOZxAHSbWuoQm6CBwSmRDmUkNiioLnvsHV0HbB8YZf78QxAc-y3dyBiIPGUlquSS8ZlUFXhrXsiwE2dPeKX9JmW7LP3XtPFmAb8_znP9nJeDdM2O0dIqC1jOzDGzeGORLj3g_YoPrDq7CVfOWkZyjZ61xpqeEM4MggV_XKHdYe8ltx8FTk1191MZ9Mp09dWkwZy-HogajGpWKfgaIzQ9U5g2yeSYEcXJvdAqZQZ2PagjCu043qH_qjV_UqKoG5yWyUkbY0_LDNHvyfZt7wSza6wttrVl4aA9hnI84tJQcUHKA
          refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIxYTczODIzZS0xY2UxLTQxOTgtOGVjZC1mM2IwMWU5OTRjYmQifQ.eyJleHAiOjE3MDA1Mjk3OTIsImlhdCI6MTcwMDUyNzk5MiwianRpIjoiYjlkNGQ0YjktOTRiNy00ZmRlLTgwNjAtNjBmMDNhZjdmMzM0IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9ha2Rldi5nY3AuYmFua2luYS5pZC9hdXRoL3JlYWxtcy9TQ0YiLCJhdWQiOiJodHRwczovL2tleWNsb2FrZGV2LmdjcC5iYW5raW5hLmlkL2F1dGgvcmVhbG1zL1NDRiIsInN1YiI6IjhjNTMzNzM2LTgyNjUtNDc3Zi1iNDQ1LTlmMWRmZmUzNWRkZCIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJzZ28tdGVzdGVyIiwic2Vzc2lvbl9zdGF0ZSI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImZkNmYyYjllLTgxYjAtNDYwYS05M2IwLTRhYWY3MjU1NjFmYyJ9.Ox_tNAqyiNdi5Ro90xcocW1cWOaUdhHhXvIw3czuhR4
          tokenType: Bearer
          expiresIn: 300
        meta: {}
    BindingAccountNumberRequest:
      title: BindingAccountNumberRequest
      required:
      - customerNo
      type: object
      properties:
        customerNo:
          type: string
      example:
        customerNo: '123'
    Errornotfund1:
      title: Errornotfund1
      required:
      - responseCode
      - responseMessage
      - data
      - meta
      type: object
      properties:
        responseCode:
          type: string
        responseMessage:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        responseCode: '50051000'
        responseMessage: Sistem mengalami gangguan, Mohon hubungi administrator
        data: 
        meta:
          debug_param: Data Tidak Ditemukan
    Success8:
      title: Success8
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data13"
          - {}
        meta:
          type: object
      example:
        response_code: '200'
        response_message: Sukses
        data:
          accountNumber: '1001701181'
          accountName: CIF CORP SATU
          accountType: GIRO
          productCode: '1011'
          productName: GIRO
          currency: IDR
          workingBalance: 0
          referenceNumber: '202463348247'
          dateTime: '20240215084310'
          customerNumber: '7529403288'
          customerType: Corporate
          limitId: XNC159
        meta: {}
    Data13:
      title: Data13
      required:
      - accountNumber
      - accountName
      - accountType
      - productCode
      - productName
      - currency
      - workingBalance
      - referenceNumber
      - dateTime
      - customerNumber
      - customerType
      - limitId
      type: object
      properties:
        accountNumber:
          type: string
        accountName:
          type: string
        accountType:
          type: string
        productCode:
          type: string
        productName:
          type: string
        currency:
          type: string
        workingBalance:
          type: integer
          format: int32
        referenceNumber:
          type: string
        dateTime:
          type: string
        customerNumber:
          type: string
        customerType:
          type: string
        limitId:
          type: string
      example:
        accountNumber: '1001701181'
        accountName: CIF CORP SATU
        accountType: GIRO
        productCode: '1011'
        productName: GIRO
        currency: IDR
        workingBalance: 0
        referenceNumber: '202463348247'
        dateTime: '20240215084310'
        customerNumber: '7529403288'
        customerType: Corporate
        limitId: XNC159
    UpdateRequest1:
      title: UpdateRequest1
      required:
      - amount
      - expireDate
      type: object
      properties:
        amount:
          type: integer
          format: int32
        expireDate:
          type: string
      example:
        amount: 25000000
        expireDate: '2026-05-31T13:37:50+07:00'
    Success10:
      title: Success10
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data4"
          - {}
        meta:
          type: object
      example:
        response_code: '20051000'
        response_message: Sukses
        data:
          id: JSX900
          amount: 25000000
          state: APPROVED
          availableCreditAmount: 25000000
          consumedCreditAmount: 0
          startDate: '2022-04-28T13:37:50+07:00'
          expireDate: '2022-05-31T13:37:50+07:00'
          creationDate: '2023-12-05T11:20:01+07:00'
          approvedDate: '2023-12-05T11:20:01+07:00'
          lastModifiedDate: '2023-12-05T11:20:01+07:00'
        meta: {}
    Success11:
      title: Success11
      required:
      - responseCode
      - responseMessage
      - data
      - meta
      type: object
      properties:
        responseCode:
          type: string
        responseMessage:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data16"
          - {}
        meta:
          type: object
      example:
        responseCode: '200'
        responseMessage: Sukses
        data:
          installments:
          - number: '1'
            dueDate: '2024-01-28T07:00:00+07:00'
            state: PENDING
            isPaymentHoliday: false
            principal:
              amount:
                expected: 5000000
                paid: 0
                due: 5000000
            interest:
              amount:
                expected: 28750
                paid: 0
                due: 28750
              tax:
                expected: 0
                paid: 0
                due: 0
            fee:
              amount:
                expected: 0
                paid: 0
                due: 0
              tax:
                expected: 0
                paid: 0
                due: 0
            penalty:
              amount:
                expected: 0
                paid: 0
                due: 0
              tax:
                expected: 0
                paid: 0
                due: 0
          currency:
            currencyCode: IDR
            code: IDR
        meta: {}
    Data16:
      title: Data16
      required:
      - installments
      - currency
      type: object
      properties:
        installments:
          type: array
          items:
            "$ref": "#/components/schemas/Installment"
          description: ''
        currency:
          allOf:
          - "$ref": "#/components/schemas/Currency"
          - {}
      example:
        installments:
        - number: '1'
          dueDate: '2024-01-28T07:00:00+07:00'
          state: PENDING
          isPaymentHoliday: false
          principal:
            amount:
              expected: 5000000
              paid: 0
              due: 5000000
          interest:
            amount:
              expected: 28750
              paid: 0
              due: 28750
            tax:
              expected: 0
              paid: 0
              due: 0
          fee:
            amount:
              expected: 0
              paid: 0
              due: 0
            tax:
              expected: 0
              paid: 0
              due: 0
          penalty:
            amount:
              expected: 0
              paid: 0
              due: 0
            tax:
              expected: 0
              paid: 0
              due: 0
        currency:
          currencyCode: IDR
          code: IDR
    Installment:
      title: Installment
      required:
      - number
      - dueDate
      - state
      - isPaymentHoliday
      - principal
      - interest
      - fee
      - penalty
      type: object
      properties:
        number:
          type: string
        dueDate:
          type: string
        state:
          type: string
        isPaymentHoliday:
          type: boolean
        principal:
          allOf:
          - "$ref": "#/components/schemas/Principal"
          - {}
        interest:
          allOf:
          - "$ref": "#/components/schemas/Interest"
          - {}
        fee:
          allOf:
          - "$ref": "#/components/schemas/Fee"
          - {}
        penalty:
          allOf:
          - "$ref": "#/components/schemas/Penalty"
          - {}
      example:
        number: '1'
        dueDate: '2024-01-28T07:00:00+07:00'
        state: PENDING
        isPaymentHoliday: false
        principal:
          amount:
            expected: 5000000
            paid: 0
            due: 5000000
        interest:
          amount:
            expected: 28750
            paid: 0
            due: 28750
          tax:
            expected: 0
            paid: 0
            due: 0
        fee:
          amount:
            expected: 0
            paid: 0
            due: 0
          tax:
            expected: 0
            paid: 0
            due: 0
        penalty:
          amount:
            expected: 0
            paid: 0
            due: 0
          tax:
            expected: 0
            paid: 0
            due: 0
    Principal:
      title: Principal
      required:
      - amount
      type: object
      properties:
        amount:
          allOf:
          - "$ref": "#/components/schemas/Amount"
          - {}
      example:
        amount:
          expected: 5000000
          paid: 0
          due: 5000000
    Amount:
      title: Amount
      required:
      - expected
      - paid
      - due
      type: object
      properties:
        expected:
          type: integer
          format: int32
        paid:
          type: integer
          format: int32
        due:
          type: integer
          format: int32
      example:
        expected: 5000000
        paid: 0
        due: 5000000
    Interest:
      title: Interest
      required:
      - amount
      - tax
      type: object
      properties:
        amount:
          allOf:
          - "$ref": "#/components/schemas/Amount"
          - {}
        tax:
          allOf:
          - "$ref": "#/components/schemas/Tax"
          - {}
      example:
        amount:
          expected: 28750
          paid: 0
          due: 28750
        tax:
          expected: 0
          paid: 0
          due: 0
    Tax:
      title: Tax
      required:
      - expected
      - paid
      - due
      type: object
      properties:
        expected:
          type: integer
          format: int32
        paid:
          type: integer
          format: int32
        due:
          type: integer
          format: int32
      example:
        expected: 0
        paid: 0
        due: 0
    Fee:
      title: Fee
      required:
      - amount
      - tax
      type: object
      properties:
        amount:
          allOf:
          - "$ref": "#/components/schemas/Amount"
          - {}
        tax:
          allOf:
          - "$ref": "#/components/schemas/Tax"
          - {}
      example:
        amount:
          expected: 0
          paid: 0
          due: 0
        tax:
          expected: 0
          paid: 0
          due: 0
    Penalty:
      title: Penalty
      required:
      - amount
      - tax
      type: object
      properties:
        amount:
          allOf:
          - "$ref": "#/components/schemas/Amount"
          - {}
        tax:
          allOf:
          - "$ref": "#/components/schemas/Tax"
          - {}
      example:
        amount:
          expected: 0
          paid: 0
          due: 0
        tax:
          expected: 0
          paid: 0
          due: 0
    Currency:
      title: Currency
      required:
      - currencyCode
      - code
      type: object
      properties:
        currencyCode:
          type: string
        code:
          type: string
      example:
        currencyCode: IDR
        code: IDR
    DisbursementRequest1:
      title: DisbursementRequest1
      required:
      - limitID
      - accountNumber
      - InvoiceNo
      - interestRate
      - loanAmount
      - originalLoanDate
      - maturityDate
      - beneficiaryAccountNumber
      - PenaltyRate
      - adminFee
      type: object
      properties:
        limitID:
          type: string
        accountNumber:
          type: string
        InvoiceNo:
          type: string
        interestRate:
          type: integer
          format: int32
        loanAmount:
          type: integer
          format: int32
        originalLoanDate:
          type: string
        maturityDate:
          type: string
        beneficiaryAccountNumber:
          type: string
        PenaltyRate:
          type: integer
          format: int32
        adminFee:
          type: integer
          format: int32
      example:
        limitID: ''
        accountNumber: '1001701173'
        InvoiceNo: No123123QWEQ
        interestRate: 9
        loanAmount: 1000000
        originalLoanDate: '2023-12-05T13:37:50+07:00'
        maturityDate: '2024-01-28T13:37:50+07:00'
        beneficiaryAccountNumber: '1000887788'
        PenaltyRate: 3
        adminFee: 500
    Success12:
      title: Success12
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data17"
          - {}
        meta:
          type: object
      example:
        response_code: '20151000'
        response_message: Sukses
        data:
          Id: FKTV942
          Amount: 100000
          AdminFee: 0
          CreditArrangementId: ADT383
          CustomerId: 578f522c-a45f-45bc-8210-f5d0c11fad6f
          DisbursementAmount: 0
          DisbursementTransactionId: ''
          DisburseCoreReference: ''
          Fee: 0
          HolderKey: 8ae381898c16418d018c37eb2b5b066b
          HolderType: CLIENT
          InterestRate: 9
          PayoffAmount: 0
          PayoffTransactionId: ''
          PayoffCoreReference: ''
          Status: NEW
          StatusDescription: ''
          originalLoanDate: 1701376993
          maturityDate: 1701672263
          LoanDisbursementDate: '0001-01-01T07:00:00+07:00'
          LoanPayoffDate: '0001-01-01T07:00:00+07:00'
          CreatedAt: '2023-12-05T11:25:52.617268+07:00'
        meta: {}
    Data17:
      title: Data17
      required:
      - Id
      - Amount
      - AdminFee
      - CreditArrangementId
      - CustomerId
      - DisbursementAmount
      - DisbursementTransactionId
      - DisburseCoreReference
      - Fee
      - HolderKey
      - HolderType
      - InterestRate
      - PayoffAmount
      - PayoffTransactionId
      - PayoffCoreReference
      - Status
      - StatusDescription
      - originalLoanDate
      - maturityDate
      - LoanDisbursementDate
      - LoanPayoffDate
      - CreatedAt
      type: object
      properties:
        Id:
          type: string
        Amount:
          type: integer
          format: int32
        AdminFee:
          type: integer
          format: int32
        CreditArrangementId:
          type: string
        CustomerId:
          type: string
        DisbursementAmount:
          type: integer
          format: int32
        DisbursementTransactionId:
          type: string
        DisburseCoreReference:
          type: string
        Fee:
          type: integer
          format: int32
        HolderKey:
          type: string
        HolderType:
          type: string
        InterestRate:
          type: integer
          format: int32
        PayoffAmount:
          type: integer
          format: int32
        PayoffTransactionId:
          type: string
        PayoffCoreReference:
          type: string
        Status:
          type: string
        StatusDescription:
          type: string
        originalLoanDate:
          type: integer
          format: int32
        maturityDate:
          type: integer
          format: int32
        LoanDisbursementDate:
          type: string
        LoanPayoffDate:
          type: string
        CreatedAt:
          type: string
      example:
        Id: FKTV942
        Amount: 100000
        AdminFee: 0
        CreditArrangementId: ADT383
        CustomerId: 578f522c-a45f-45bc-8210-f5d0c11fad6f
        DisbursementAmount: 0
        DisbursementTransactionId: ''
        DisburseCoreReference: ''
        Fee: 0
        HolderKey: 8ae381898c16418d018c37eb2b5b066b
        HolderType: CLIENT
        InterestRate: 9
        PayoffAmount: 0
        PayoffTransactionId: ''
        PayoffCoreReference: ''
        Status: NEW
        StatusDescription: ''
        originalLoanDate: 1701376993
        maturityDate: 1701672263
        LoanDisbursementDate: '0001-01-01T07:00:00+07:00'
        LoanPayoffDate: '0001-01-01T07:00:00+07:00'
        CreatedAt: '2023-12-05T11:25:52.617268+07:00'
    Success14:
      title: Success14
      required:
      - responseCode
      - responseMessage
      - data
      - meta
      type: object
      properties:
        responseCode:
          type: string
        responseMessage:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data8"
          - {}
        meta:
          type: object
      example:
        responseCode: '200'
        responseMessage: Sukses
        data:
          feeBalance: 0
          interestBalance: 0
          penaltyBalance: 0
          principalBalance: 1000000
          totalBalance: 1000000
        meta: {}
    Failednotfound1:
      title: Failednotfound1
      required:
      - responseCode
      - responseMessage
      - data
      - meta
      type: object
      properties:
        responseCode:
          type: string
        responseMessage:
          type: string
        data:
          type: string
          nullable: true
        meta:
          allOf:
          - "$ref": "#/components/schemas/Meta"
          - {}
      example:
        responseCode: '40451000'
        responseMessage: Data tidak ditemukan
        data: 
        meta:
          debug_param: record not found
    RepaymentRequest1:
      title: RepaymentRequest1
      required:
      - accountNumber
      - invoiceNo
      - externalPaymentId
      type: object
      properties:
        accountNumber:
          type: string
        invoiceNo:
          type: string
        externalPaymentId:
          type: string
      example:
        accountNumber: '1000887788'
        invoiceNo: 122.122.111
        externalPaymentId: 112.xx.xx.111
    Repayment:
      title: Repayment
      required:
      - response_code
      - response_message
      - data
      - meta
      type: object
      properties:
        response_code:
          type: string
        response_message:
          type: string
        data:
          allOf:
          - "$ref": "#/components/schemas/Data20"
          - {}
        meta:
          type: object
      example:
        response_code: '20052000'
        response_message: Sukses
        data:
          referenceId: '202339415222'
        meta: {}
    Data20:
      title: Data20
      required:
      - referenceId
      type: object
      properties:
        referenceId:
          type: string
      example:
        referenceId: '202339415222'
    GenerateRequest:
      title: GenerateRequest
      required:
      - channel
      - type
      - mobilePhone
      - email
      type: object
      properties:
        channel:
          type: string
        type:
          type: string
        mobilePhone:
          type: string
        email:
          type: string
      example:
        channel: SMS
        type: REGISTRATION
        mobilePhone: '085523836731'
        email: donoson@yahoo.com
    SendMessageRequest:
      title: SendMessageRequest
      required:
      - type
      - template
      - recipient
      - params
      type: object
      properties:
        type:
          type: string
        template:
          type: string
        recipient:
          type: string
        params:
          allOf:
          - "$ref": "#/components/schemas/Params"
          - {}
      example:
        type: wa
        template: 648029efcd8d1201661dacb3
        recipient: '085523836730'
        params:
          components:
          - type: body
            parameters:
            - type: text
              text: 1331 a/n Rovi Fauzan Akbar
            - type: text
              text: 5000.000.000
    Params:
      title: Params
      required:
      - components
      type: object
      properties:
        components:
          type: array
          items:
            "$ref": "#/components/schemas/Component"
          description: ''
      example:
        components:
        - type: body
          parameters:
          - type: text
            text: 1331 a/n Rovi Fauzan Akbar
          - type: text
            text: 5000.000.000
    Component:
      title: Component
      required:
      - type
      - parameters
      type: object
      properties:
        type:
          type: string
        parameters:
          type: array
          items:
            "$ref": "#/components/schemas/Parameter"
          description: ''
      example:
        type: body
        parameters:
        - type: text
          text: 1331 a/n Rovi Fauzan Akbar
        - type: text
          text: 5000.000.000
    Parameter:
      title: Parameter
      required:
      - type
      - text
      type: object
      properties:
        type:
          type: string
        text:
          type: string
      example:
        type: text
        text: 1331 a/n Rovi Fauzan Akbar
    SendMessageCopyRequest:
      title: SendMessageCopyRequest
      required:
      - type
      - template
      - recipient
      - params
      type: object
      properties:
        type:
          type: string
        template:
          type: string
        recipient:
          type: string
        params:
          allOf:
          - "$ref": "#/components/schemas/Params1"
          - {}
      example:
        type: wa
        template: 648029efcd8d1201661dacb3
        recipient: '085523836730'
        params:
          parameters:
          - type: text
            text: 1331 atas nama Rovi Fauzan Akbar
          - type: text
            text: 5000.000.000
    Params1:
      title: Params1
      required:
      - parameters
      type: object
      properties:
        parameters:
          type: array
          items:
            "$ref": "#/components/schemas/Parameter"
          description: ''
      example:
        parameters:
        - type: text
          text: 1331 atas nama Rovi Fauzan Akbar
        - type: text
          text: 5000.000.000
    SendMessageTempalteportalRequest:
      title: SendMessageTempalteportalRequest
      required:
      - type
      - template
      - recipient
      - params
      type: object
      properties:
        type:
          type: string
        template:
          type: string
        recipient:
          type: string
        params:
          allOf:
          - "$ref": "#/components/schemas/Params1"
          - {}
      example:
        type: wa
        template: 6480346db6ef144f3d34a78c
        recipient: '085224551945'
        params:
          parameters:
          - type: text
            text: '1331'
    SendMessageTemplateportalCopyRequest:
      title: SendMessageTemplateportalCopyRequest
      required:
      - type
      - template
      - recipient
      - params
      type: object
      properties:
        type:
          type: string
        template:
          type: string
        recipient:
          type: string
        params:
          allOf:
          - "$ref": "#/components/schemas/Params1"
          - {}
      example:
        type: wa
        template: 6480346db6ef144f3d34a78c
        recipient: '085523836730'
        params:
          parameters:
          - type: text
            text: '1331'
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security:
- bearer: []
tags:
- name: iGate
- name: Account
- name: Credit Arrangement
- name: LoanAccount
- name: Proc
- name: Token
- name: Experience
- name: Notif
- name: Misc
  description: ''
